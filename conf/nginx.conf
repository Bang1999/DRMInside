# 워커 프로레스 수 설정
worker_processes  1;

# 워커당 최대 연결 수 설정
events {
    worker_connections  1024;
}

http {
    # MIME 타입 정의
    include       mime.types;
    # 기본 타입 설정
    default_type  application/octet-stream;
    # 파일 전송 최적화
    sendfile        on;
    # 타임아웃 설정(65초)
    keepalive_timeout  65;

    # JVM 자동 탐색
    jvm_path auto;
    # JVM 클래스 패스 설정
    jvm_classpath "libs/*:jars/*:build";
    # JVM 내부에 연결할 수 있도록 디버그 모드 활성화
    jvm_options "-Xdebug";
    # IDE에서 포트 8000을 통해 접근하여 breakpoint를 찍으며 디버깅을 할 수 있다.
    jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=y";

    # Java 9+ 모듈 접근 해결을 위한 옵션
    jvm_options "--add-opens=java.base/java.lang=ALL-UNNAMED";
    jvm_options "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED";
    jvm_options "--add-opens=java.base/java.util=ALL-UNNAMED";
    jvm_options "--add-exports=java.base/sun.nio.cs=ALL-UNNAMED";

    server {
        # HTTP 포트 번호 설정
        listen       80;
        server_name  localhost;

        # 루트 요청 프록시 설정
        location / {
            proxy_pass https://www.google.com/;     # Google 프록시

            # 원보 헤더 및 쿠키 전달
            proxy_set_header    Host            www.google.com;
            proxy_set_header    User-Agent      $http_user_agent;
            proxy_set_header    Referer         "https://www.google.com/";
            proxy_set_header    Accept          "*/*";
            proxy_set_header    Accept-Encoding "";
        }

        # /search로 검색 요청 프로시 설정
        location /search {
	        proxy_pass https://www.google.com/search;

            # 원본 헤더 및 쿠키 전달
            proxy_set_header    Host            www.google.com;
            proxy_set_header    User-Agent      $http_user_agent;
            proxy_set_header    Referer         "https://www.google.com/";
            proxy_set_header    Accept          "*/*";
            proxy_set_header    Accept-Encoding "";
            proxy_set_header    Cookie          $http_cookie;

            # 쿠키 도메인/경로 재작성
            proxy_cookie_domain .google.com   localhost;
            proxy_cookie_path   /             /search;

            # Java 기반 바디 필터 적용(로고 교체)
            body_filter_type java;
            body_filter_name handler.GoogleLogoFilter;
        }


        # 에러 페이지 설정
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location /clojure {
            handler_type 'clojure';
            handler_code '
						(fn[req]
						    {
						        :status 200,
						        :headers {"content-type" "text/plain"},
						        :body  "Hello Clojure & Nginx!"
						    })
            ';
        }
    }
}
